buildscript {
    ext.kotlin_version = '1.1.50'

    repositories {
        mavenLocal()
        maven { url "http://dl.bintray.com/kboom/scherule" }
        jcenter()
    }

    dependencies {
        classpath "com.scherule:scherule-buildtools:1.0.0"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_platform_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "com.bmuschko:gradle-docker-plugin:3.0.8"
    }

}

repositories {
    mavenLocal()
    maven { url "http://dl.bintray.com/kboom/scherule" }
    mavenCentral()
}

apply plugin: 'com.scherule.project'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply from: "$projectDir/gradle/sourcesets.gradle"
apply from: "$projectDir/gradle/boot.gradle"
apply from: "$projectDir/gradle/container.gradle"

scheruleProject {

}

junitPlatform {
    platformVersion junit_platform_version
    logManager 'java.util.logging.LogManager'
//    enableStandardTestTask true

    filters {
        packages {
            include 'com.scherule.calendaring'
        }
    }
}

task functionalTest(
        type: JavaExec,
        description: 'Runs functional tests.',
        group: 'Verification'
) {
    dependsOn testClasses
    shouldRunAfter test

    classpath = sourceSets.functional.runtimeClasspath

    main = 'org.junit.platform.console.ConsoleLauncher'
    args = ['--scan-class-path',
            sourceSets.functional.output.getClassesDirs().asPath,
            '--reports-dir', "${buildDir}/test-results/junit-functional"]
}

task e2eTest(
        type: JavaExec,
        description: 'Runs e2e tests.',
        group: 'Verification'
) {
    dependsOn testClasses, startMyAppContainer, allocatePort
    shouldRunAfter test
    finalizedBy stopMyAppContainer

    classpath = sourceSets.e2e.runtimeClasspath

    main = 'org.junit.platform.console.ConsoleLauncher'
    jvmArgs = ["-Dhttp.port=${allocatePort.ext.port}"]
    args = ['--scan-class-path',
            sourceSets.e2e.output.getClassesDirs().asPath,
            '--reports-dir', "${buildDir}/test-results/junit-e2e"]
}

dependencies {

    /**
     * Main
     */

    // internal
    compile "com.scherule:scherule-commons:1.1.6"

    // logging
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // queues
    compile group: 'com.rabbitmq', name: 'amqp-client', version: '4.1.1'

    // mapping
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

    // time
    compile "joda-time:joda-time:2.9.9"

    // database
    compile "org.hibernate:hibernate-validator:$hibernate_version"
    compile "org.hibernate:hibernate-validator-annotation-processor:$hibernate_version"
    compile 'org.postgresql:postgresql:9.4-1206-jdbc42'

    // queues
    compile "org.apache.activemq:activemq-broker:5.15.0"

    // docs
    compile "io.springfox:springfox-swagger-ui:$swagger_version"
    compile "io.springfox:springfox-swagger2:$swagger_version"
    compile "io.springfox:springfox-bean-validators:$swagger_version"

    /**
     * Unit & Integration tests
     */

    // assertions
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.assertj:assertj-joda-time:2.0.0'

    // platform
    testCompile "junit:junit:4.12"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testRuntime "org.junit.vintage:junit-vintage-engine:$junit_vintage_version"
    testRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_version"
    testRuntime "org.junit.platform:junit-platform-runner:$junit_platform_version"

    // mocks & dummies
    testRuntime 'com.h2database:h2:1.4.196'

    /**
     * Integration tests
     */
    functionalCompile "info.cukes:cucumber-spring:$cucumber_version"
    functionalCompile "info.cukes:cucumber-java:$cucumber_version"
    functionalCompile "info.cukes:cucumber-junit:$cucumber_version"
    functionalCompile 'org.junit.platform:junit-platform-console:1.0.0-M5'

    /**
     * E2E tests (separate classpath)
     */

    // platform
    e2eCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    e2eRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    e2eRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_version"
    e2eRuntime "org.junit.platform:junit-platform-runner:$junit_platform_version"
    e2eRuntime "org.junit.platform:junit-platform-console:$junit_platform_version"

    // assertions
    e2eCompile "org.assertj:assertj-core:$assertj_version"
    e2eCompile 'org.assertj:assertj-joda-time:2.0.0'

    // guice
    e2eCompile "com.google.inject:guice:$guice_version"
    e2eCompile "com.google.inject.extensions:guice-multibindings:$guice_version"

    // cucumber
    e2eCompile "info.cukes:cucumber-guice:$cucumber_version"
    e2eCompile "info.cukes:cucumber-java:$cucumber_version"
    e2eCompile "info.cukes:cucumber-junit:$cucumber_version"

    // rest assured
    e2eCompile "io.rest-assured:rest-assured:$rest_assured_version"
    e2eCompile "io.rest-assured:json-path:$rest_assured_version"
    e2eCompile "io.rest-assured:json-schema-validator:$rest_assured_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}