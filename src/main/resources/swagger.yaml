swagger: '2.0'
info:
  description: >-
    You can find out more about this module at
    [GitHub](https://github.com/Scherule/Scherule-calendaring).
  version: 1.0.0
  title: Scherule Calendaring
  contact:
    email: gurgul.grzegorz@gmail.com
schemes:
  - http
paths:
  /swagger.json:
    get:
      tags:
        - swagger
      summary: Returns swagger definition in JSON format
      operationId: getSwagger
      responses:
        '200':
          description: OK
  /meeting:
    post:
      tags:
        - meeting
      summary: Creates a new meeting
      description: >-
        Sets the general information about the available date range and
        participants involved. The entity created is going to represent the
        meeting and will change state upon modifications or scheduling.
      operationId: createMeeting
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Initial information about the meeting.
          required: true
          schema:
            $ref: '#/definitions/Meeting'
      responses:
        '201':
          description: The newly created meeting
          schema:
            $ref: '#/definitions/Meeting'
        '401':
          description: Created
        '405':
          description: Validation exception
    put:
      tags:
        - meeting
      summary: Update an existing meeting
      description: Updates some information regarding this meeting.
      operationId: updateMeeting
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Updpated meeting details.
          required: true
          schema:
            $ref: '#/definitions/Meeting'
      responses:
        '200':
          description: Updated meeting
          schema:
            $ref: '#/definitions/Meeting'
        '404':
          description: Meeting not found
        '405':
          description: Validation exception
      x-contentType: application/json
      x-accepts: application/json
  '/meeting/{meetingId}':
    get:
      tags:
        - meeting
      summary: Gets a meeting
      description: Gets a meeting by its id.
      operationId: getMeeting
      produces:
        - application/json
      parameters:
        - name: meetingId
          in: path
          description: Meeting id to get
          required: true
          type: string
      responses:
        '200':
          description: Meeting by that ID
          schema:
            $ref: '#/definitions/Meeting'
        '400':
          description: Invalid ID supplied
        '404':
          description: Meeting not found
      x-contentType: application/json
      x-accepts: application/json
    delete:
      tags:
        - meeting
      summary: Deletes a meeting
      description: Removes a meeting which is no longer used.
      operationId: removeMeeting
      produces:
        - application/json
      parameters:
        - name: meetingId
          in: path
          description: Meeting id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Meeting not found
      x-contentType: application/json
      x-accepts: application/json
definitions:
  Meeting:
    type: object
    example:
      parameters:
        between: 1507040100000-1507046400000
        minDuration: 18000000
        minParticipants: 3
      participants:
        - id:
            id: '321'
          name: Greg
          importance: 100
          availability:
            - interval: 1507040100000-1507046400000
              preference: 1
            - interval: 1507108500000-1507158000000
              preference: 1
    properties:
      meetingId:
        type: string
      parameters:
        type: object
        properties:
          between:
            type: string
            example: 1507040100000-1507046400000
            description: >-
              Rough period of time this meeting can be scheduled in. Range of
              two millis.
          minDuration:
            type: integer
            example: 18000000
            description: Minimum duration of the meeting in milliseconds.
          minParticipants:
            type: integer
            minimum: 2
      participants:
        type: array
        items:
          type: object
          properties:
            participantId:
              type: string
            name:
              type: string
            importance:
              type: integer
              minimum: 0
              maximum: 100
            availability:
              type: array
              items:
                type: object
                properties:
                  interval:
                    type: string
                  preference:
                    type: integer
                    minimum: 0
                    maximum: 100
      state:
        type: string
        enum:
          - created
          - gathering_information
          - scheduling
          - avaiting_approval
  MeetingParameters:
    type: object
    properties:
      between:
        type: string
        example: 1507040100000-1507046400000
        description: >-
          Rough period of time this meeting can be scheduled in. Range of two
          millis.
      minDuration:
        type: integer
        example: 18000000
        description: Minimum duration of the meeting in milliseconds.
      minParticipants:
        type: integer
        minimum: 2
  Participant:
    type: object
    properties:
      participantId:
        type: string
      name:
        type: string
      importance:
        type: integer
        minimum: 0
        maximum: 100
      availability:
        type: array
        items:
          type: object
          properties:
            interval:
              type: string
            preference:
              type: integer
              minimum: 0
              maximum: 100
  Availability:
    type: object
    properties:
      interval:
        type: string
      preference:
        type: integer
        minimum: 0
        maximum: 100
